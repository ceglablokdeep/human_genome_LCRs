####This is the main script for human genetics repeats paper########
##1 Dec, 2022#######
##1. Download human protein sequences from Gencode Release 42 (GRCh38.p13)
wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_42/gencode.v42.pc_transcripts.fa.gz
##I have downloaded Protein-coding transcript sequences
##2. Download the translations files as we are interested in the protein repeats
wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_42/gencode.v42.pc_translations.fa.gz
awk -F"|" '{print $1}' gencode.v42.pc_translations.fa > gencode.v42_translations_oneheader.fa
wget  https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_42/gencode.v42.chr_patch_hapl_scaff.annotation.gtf.gz
#Create a composition file to detect protein repeats in the protein sequences
CompositionMaker gencode.v42_translations_oneheader.fa
fLPS2 -c gencode.v42_translations_oneheader.fa.COMPOSITION gencode.v42_translations_oneheader.fa > gencode.v42_flpsout_withcomposition
awk '$7>3 && $9 !~ /X/ && ($7/(($6-$5)+1)) > 0.5 && length($9)<5{print $0}' OFS='\t' gencode.v42_flpsout_withcomposition|sed -e 's/{//g' -e 's/}//g' > gencode.v42_morethanfifty_repeats
##creatng bed file to extract the sequences from the fasta file
##bedtools require to subtract one from the initial position to include that nucleotide/amino acid
awk '{print $1,$5-1,$6}' OFS="\t" gencode.v42_morethanfifty_repeats > input.bed
bedtools getfasta -fi gencode.v42_translations_oneheader.fa -bed input.bed -tab|awk '{print $1,$2,20,20}'|sed 's/ /\t/g' >  input_pogo.txt
PoGo -fasta gencode.v42.pc_translations.fa -gtf gencode.v42.chr_patch_hapl_scaff.annotation.gtf -in input_pogo.txt > repeats_genomic.bed
##49976 input_pogo.gct
##input_pogo.gct is the file with mapped coordinates
cut -f1,2 input_pogo.gct|awk -F "ENSG" 'NF==3{print $0}'|sed -e 's/"//g' -e 's/|/\t/g' -e 's/@//g' -e 's/\./\t/1'|awk '$1==$3{print $4,$1,$2}' OFS="\t"|grep -v ","|sed -e 's/:/\t/g' -e 's/-/\t/g' -e 's/chr//g'|sort -k1,1 -k2n,2|sed 's/\t$//'|bedtools merge -c 4,5 -o distinct,distinct -i stdin > flps_detected_single_chronly_exon_repeats.txt
##49968 single gene mapped
##i.e. 49976 - 49968 = 8 are multimapped
awk '{print $6,$7,$8,$11,$12}' OFS="\t" repeats_ucsc_grch38|sed '1d'|sort -k1,1 -k2n,2|bedtools merge -c 4,5 -o distinct,distinct -i stdin > ucsc_repeats.bed
##4211495 ucsc_repeats.bed
##ucsc_repeats.bed contains both exonic and non-geneic repeats
awk '{print "chr"$0}' flps_detected_single_chronly_exon_repeats.txt > flps_detected_single_chronly_exon_repeats_chr.txt
##11060 flps_detected_single_chronly_exon_repeats_chr.txt


##I am keeping these output files here.

##file ucsc_repeats.bed is not uploaded as it is 178MB.

##chr1	960771	960789	ENSG00000187961	PPPPPP
while read j
do
echo $j
chr=`echo $j|awk '{print $1}'`
str=`echo $j|awk '{print $2}'`
end=`echo $j|awk '{print $3}'`
geneid=`echo $j|awk '{print $4}'`
rpt=`echo $j|awk '{print $5}'`
mainrpt=`echo $rpt|sed 's/.\{1\}/&\n/g'|sort|uniq -c|sort -nr|head -n1|awk '{print "Poly"$2}'`
echo -e "$chr\t$str\t$end\t$geneid\t$mainrpt" >> flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact
done < flps_detected_single_chronly_exon_repeats_chr_rpts_combined

sort -k1,1 -k2,2n flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact > temp
mv temp flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact
######
bedtools intersect -wa -wb -a flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact -b ucsc_repeats.bed > flps_known_repeats_intersect.bed

##We downloaded the human reference fasta file to get the length of chromosomes.
##wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_42/GRCh38.p13.genome.fa.gz
faSize -detailed -tab GRCh38.p13.genome.fa|grep "^chr"|grep -v chrM > chromosomesizes
##Downloading the gene annotation on the genome
wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_42/gencode.v42.basic.annotation.gtf.gz
awk '$3=="gene"{print $0}' gencode.v42.chr_patch_hapl_scaff.annotation.gtf|grep "^chr"|sed -e 's/"//g' -e 's/;//g'|awk '$12=="protein_coding"{print $1,$4,$5,$14}' OFS="\t"|grep -v "^chrM"|awk '{if($3>$2)print $0;else print $1,$3,$2,$4}' OFS="\t" > human_protein_coding_genes_coordinates
##20017 human_protein_coding_genes_coordinates
###subsetting the human genome fasta file for just chromosomes and removing the scaffolds and chrMT
awk '{print $1,0,$2}' OFS="\t" chromosomesizes > extract_for_genome.bed
bedtools getfasta -fi GRCh38.p13.genome.fa -bed extract_for_genome.bed > human_chr_fasta.fa
awk -F: '{print $1}' human_chr_fasta.fa > temp.fa
mv temp.fa human_chr_fasta.fa
###making 50kb non-overlapping windows for GC% calculation
bedtools makewindows -g chromosomesizes -w 50000 > abcd
sort -u abcd|sort -k1,1 -k2,2n > human_50kb_windows
rm abcd
##calculating the GC% in each 50kb window
bedtools nuc -fi human_chr_fasta.fa -bed human_50kb_windows|sed '1d'|cut -f1-3,5 > human_50kb_gc_per

####checking the fraction of exons in 50kb windows####

##This is previous comman which was faulty: grep "^chr" gencode.v42.chr_patch_hapl_scaff.annotation.gtf|grep -v "pseudo"|grep "ENST"|grep "protein_coding"|awk '$3=="exon"{print $0}'|sed -e 's/"//g' -e 's/;//g'|awk '{if($5>$4)print $1,$4,$5;else if($4>$5)print $1,$5,$4}' OFS="\t"|sort -k1,1 -k2,2n|bedtools merge -i stdin > exon_coordinates

grep "^chr" gencode.v42.chr_patch_hapl_scaff.annotation.gtf|awk '$3=="exon"{print $0}'|grep -v "pseudo"|grep "ENST"|sed -e 's/"//g' -e 's/;/\t/g'|awk '{print $1,$4,$5,$14,$16}' OFS="\t"|awk '$4!~/RNA/{print $0}'|grep -v "artifact"|grep -v "ribozyme"|grep -v "TEC"|awk '{if($3>$2)print $1,$2,$3,$4,$5;else if($2>$3)print $1,$3,$2,$4,$5}' OFS="\t"|sort -k1,1 -k2,2n|bedtools merge -c 4,5 -o distinct,distinct -i stdin > exon_coordinates

##235634 exon_coordinates

########subsetting aa repeat containing exons
bedtools intersect -a exon_coordinates -b flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact > aa_repeat_containing_exons
bedtools intersect -v -a exon_coordinates -b flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact > non_aa_repeat_containing_exons
##Calculating the fraction of region covered by exons in  each 50 kb windows
bedtools coverage -a human_50kb_windows -b exon_coordinates|awk '{print $1,$2,$3,$7}' OFS="\t" > exon_coverage_50kb_windows
##now calculating the fraction of region covered by AA repeats in each 50kb windows
bedtools coverage -a human_50kb_windows -b flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact|awk '{print $1,$2,$3,$7}' OFS="\t" > repeats_coverage_50kb_windows

###calculating the number of exons and number of repeats in 50kb window
bedtools intersect -c -a human_50kb_windows -b exon_coordinates > exon_counts_50kb_window
bedtools intersect -c -a human_50kb_windows -b flps_detected_single_chronly_exon_repeats_chr_rpts_combined_compact > flps_repeats_count_50kb_window
